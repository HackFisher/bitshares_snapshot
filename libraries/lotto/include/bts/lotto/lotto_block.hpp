#pragma once
#include <bts/blockchain/config.hpp>
#include <bts/blockchain/transaction.hpp>
#include <bts/blockchain/asset.hpp>
#include <bts/blockchain/block.hpp>
#include <fc/uint128.hpp>

namespace bts { namespace lotto {
using namespace bts::blockchain;

/**
*  A block that contains lotto related lotto block info
*/
struct lotto_block : public trx_block
{
    lotto_block( const trx_block& b )
    :trx_block(b){}

    lotto_block( const trx_block& b, const fc::sha256& secret, const fc::sha256& revealed_secret )
        :trx_block(b),secret(secret),revealed_secret(revealed_secret){}

    lotto_block(){}

    fc::sha256 secret;  // HASH( S[n] ) where n is the index in the array of secrets generated by this delegate
    fc::sha256 revealed_secret; //  S[n-1]
};

}} // bts::lotto

