/**
  @defgroup bts_blockchain Blockchain Library
  @brief Provides abstraction for dealing with TaPOS blockchains.

  The blockchain library provides an abstraction for implementing your own custom DACs build on top of
  a Delegated Proof-of-Stake blockchain.  

  This library is designed to be extended by adding new output claim types and custom transaction 
  validation logic on top of the basic transactions that are used in all DACs to transfer ownership
  of shares among multiple users. 

  The basic premise behind the design is that there are three types of transactions in
  every block:

  1) Determinstic Transactions - these are transactions that occur automatically every block based 
     upon the state of the blockchain after the prior block.  Examples of deterministic transactions
     include:

      a) Inactivity Fees charged to move outputs forward in the chain.
      b) Market Matching of Bids & Asks
      c) Margin Calls

  2) User Transactions - these are transactions initiated by users and involve signing.


  A blockchain has two modes of operation, one for testing and the other for live
  operation.   When testing the proof-of-work and timing requirements must be simulated
  so that thousands of blocks can be built and processed rapidly.  


  @section bts_blockchain_timing Blockchain Timining 

  The block will be produced by the a delegate which is selected accoding to the block time and delegate rank.  
  Assuming all DELEGATES[NUM_DELEGATES] are sorted by NET_VOTES then the delegate that has authority to sign
  the next block is:  DELEGATES[ (SEC_SINCE_GENESIS/BLOCK_INTERVAL) % MAX_DELEGATES ]. 



*/




